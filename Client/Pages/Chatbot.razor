@page "/chatbot"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>AI Chatbot</h3>
<p>Ask something like: "Show me data for Germany from 2023-01 to 2023-12"</p>

<div>
    <textarea @bind="UserInput" placeholder="Type your query here.." rows="3" style="width: 100%;"></textarea>
    <button @onclick="SendMessage">Send</button>
</div>

<div>
    <h4>Chat History</h4>
    <ul>
        @foreach (var message in ChatHistory)
        {
            <li><strong>@message.Sender:</strong> @message.Text</li>
        }
    </ul>
</div>

@code {
    private string UserInput = string.Empty;
    private List<ChatMessage> ChatHistory = new();

    protected override async Task OnInitializedAsync()
    {
        // Load chat history from the API
        ChatHistory = await Http.GetFromJsonAsync<List<ChatMessage>>("api/chatbot") ?? new List<ChatMessage>();
    }

    private async Task SendMessage()
    {
        if (string.IsNullOrWhiteSpace(UserInput)) return;

        // Add user message to chat history
        ChatHistory.Add(new ChatMessage { Sender = "User", Text = UserInput });

        try
        {
            // Call the API to get a response
            var response = await Http.PostAsJsonAsync("api/chatbot", new ChatMessage { Sender = "User", Text = UserInput });

            if (response.IsSuccessStatusCode)
            {
                var aiResponse = await response.Content.ReadFromJsonAsync<ChatMessage>();
                if (aiResponse != null)
                {
                    ChatHistory.Add(aiResponse);
                }
            }
        }
        catch (Exception ex)
        {
            ChatHistory.Add(new ChatMessage
            {
                Sender = "AI",
                Text = $"An unexpected error occurred: {ex.Message}"
            });
        }

        // Clear user input
        UserInput = string.Empty;
    }

    private class ChatMessage
    {
        public string Sender { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
    }
}